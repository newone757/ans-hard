# VPS Inventory File Template
# Copy this to inventory.ini and customize with your server details
# 
# Usage: ansible-playbook -i inventory.ini vps-setup.yml --ask-vault-pass

[vps_servers]
# Production servers
vps1 ansible_host=192.168.1.10 vault_root_password="{{ vault_root_passwords.vps1 }}"
vps2 ansible_host=192.168.1.11 vault_root_password="{{ vault_root_passwords.vps2 }}"
vps3 ansible_host=192.168.1.12 vault_root_password="{{ vault_root_passwords.vps3 }}"

# Development/Staging servers (optional)
# dev-vps1 ansible_host=10.0.1.50 vault_root_password="{{ vault_root_passwords.dev_vps1 }}"
# staging-vps1 ansible_host=10.0.1.51 vault_root_password="{{ vault_root_passwords.staging_vps1 }}"

# Cloud provider examples:
# aws-web1 ansible_host=ec2-54-123-45-67.compute-1.amazonaws.com vault_root_password="{{ vault_root_passwords.aws_web1 }}"
# do-web1 ansible_host=droplet1.yourdomain.com vault_root_password="{{ vault_root_passwords.do_web1 }}"
# linode-web1 ansible_host=173.255.123.45 vault_root_password="{{ vault_root_passwords.linode_web1 }}"

[vps_servers:vars]
# Global variables for all VPS servers
# These can be overridden in host_vars/ for specific servers

# Connection settings (used by playbook detection logic)
ansible_connection=ssh
ansible_ssh_common_args='-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
ansible_ssh_private_key_file=~/.ssh/vps_management_key

# Timeout settings
ansible_ssh_timeout=30
ansible_gather_timeout=30

# Python interpreter (adjust if needed)
ansible_python_interpreter=/usr/bin/python3

# Optional: Set specific timezone for all servers
# server_timezone=America/New_York

# Optional: Additional packages to install on all servers
# additional_packages:
#   - htop
#   - vim
#   - curl
#   - wget
#   - git

# Host groups for different environments (optional)
[production]
vps1
vps2
vps3

[development]
# dev-vps1

[staging]
# staging-vps1

[webservers]
# Servers that will host web applications
vps1
vps2

[databases]
# Servers that will host databases
vps3

# Variables for different environments
[production:vars]
environment=production
backup_retention_days=30

[development:vars]
environment=development
backup_retention_days=7

[staging:vars]
environment=staging
backup_retention_days=14

[webservers:vars]
# Web server specific variables
install_nginx=true
install_apache=false

[databases:vars]
# Database server specific variables
install_mysql=true
install_postgresql=false

# All servers group (automatically includes all defined hosts)
[all:vars]
# Global variables that apply to every server
# These are inherited by all groups and hosts

# Locale settings
locale=en_US.UTF-8
timezone=UTC

# Log rotation settings
log_rotate_days=30
log_compress=true

# Security settings
allow_password_authentication=false
ssh_max_auth_tries=3
ssh_client_alive_interval=300

# Fail2Ban settings
fail2ban_ban_time=3600
fail2ban_find_time=600
fail2ban_max_retry=5

# Examples of host-specific overrides:
# Create files in host_vars/ directory:
# 
# host_vars/vps1/vars.yml:
# ---
# vault_ssh_port: 2223
# custom_packages:
#   - nginx
#   - php-fpm
# 
# host_vars/vps2/vars.yml:
# ---
# vault_ssh_port: 2224
# install_docker: true
#
# host_vars/vps3/vars.yml:
# ---
# vault_ssh_port: 2225
# mysql_root_password: "{{ vault_mysql_passwords.vps3 }}"

# Notes:
# ======
# 1. Replace IP addresses with your actual server IPs or hostnames
# 2. Customize server names (vps1, vps2, etc.) to match your naming convention
# 3. Each server needs a corresponding entry in your vault.yml file
# 4. Use FQDN or IP addresses that are reachable from your control machine
# 5. Group variables can be overridden at the host level using host_vars/
# 6. Comment out servers you don't want to manage
# 7. The playbook will automatically detect server state (fresh vs configured)

# Vault Configuration Required:
# ============================
# Your group_vars/all/vault.yml should contain:
# 
# vault_ssh_port: 2222
# vault_admin_username: sysadmin
# vault_admin_password: "YourStrongPassword123!"
# 
# vault_root_passwords:
#   vps1: "root_password_for_vps1"
#   vps2: "root_password_for_vps2"
#   vps3: "root_password_for_vps3"
#   # Add entries for each server in your inventory
